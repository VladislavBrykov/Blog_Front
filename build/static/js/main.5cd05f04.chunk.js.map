{"version":3,"sources":["components/404/404.js","components/app-header/index.jsx","components/app-header/app-header.jsx","pages/LoginPage.jsx","pages/RegistrationPage.jsx","pages/MainPage.jsx","components/menu/index.js","components/menu/menu.js","grapefruit-slice-332-332.png","pages/allPosts.jsx","pages/AllPostsUser.jsx","pages/NewPostPage.jsx","pages/MyPostsRedactPage.jsx","pages/PostIdPage.jsx","App.js","index.js"],"names":["NotFound404","src","alt","to","pathname","AppHeader","a","axios","defaults","baseURL","get","headers","Authorization","localStorage","jwtToken","then","props","changeLoggedIn","window","location","reload","role","className","this","loggedIn","id","onClick","loadData","React","Component","styles","position","top","left","transform","useState","phoneEmail","password","UserData","changeUserData","post","res","status","alert","data","infoUser","loginUser","searchUser","console","log","newToken","style","type","name","onChange","e","target","value","placeholder","required","RegistrationPage","login","document","getElementById","body","class","action","method","MainPage","href","AppMenu","PostsPage","params","CurrentPage","changeCurrentPage","dataFromServer","setDataFromServer","allPosts","posts","reverse","useEffect","map","item","index","title","createdAt","img","length","current","defaultCurrent","total","Math","ceil","NewPostsPage","content","idPost","createNewPost","bodyCreateNewPost","rows","cols","avatar","email","newFile","useRef","toString","postIdInformation","uploadAvatar","image","formData","FormData","append","catch","err","message","userImg","ref","accept","files","PostsIdPage","match","deletePost","delete","resultCreateNewLike","countDisLikes","countLikes","App","setloggedIn","state","exact","path","render","LoginPage","MyPostsRedactPage","component","AllPosts","PostIdPage","AllPostsUser","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.5cd05f04.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { Component }  from 'react';\n\n\nconst NotFound404 = () => {\n  return (\n    <div>\n      <img src=\"https://f0.pngfuel.com/png/426/164/crying-michael-jordan-png-clip-art.png\" alt=\"cry\" />\n      <Link\n        to={{\n          pathname: \"/\"\n        }}\n      >\n        {\" \"}\n        Go Back\n      </Link>\n    </div>\n  );\n};\n\nexport default NotFound404;\n","import AppHeader from './app-header.jsx';\nexport default AppHeader;","import React from 'react'\nimport './app-header.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass AppHeader extends React.Component {\n\n  async loadData() { //Функция с запросом на сервер\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    // const body = {};\n    await axios.get(\n      `/logout/?all=true`,\n      // body,\n      {\n        headers: {\n          Authorization: localStorage.jwtToken\n        }\n      }\n    )\n      .then(() => this.props.changeLoggedIn('off'))\n    window.location.reload();\n    delete localStorage.jwtToken;\n    delete localStorage.role;\n  }\n\n  render() {\n\n    return (\n      <div className=\"header-wrapper\">\n        {\n          this.props.loggedIn === \"admin\" || this.props.loggedIn === \"user\"\n            ? <div className=\"header\">\n              <button id=\"btn\" onClick={() => this.loadData()}><Link to=\"/\">Logout</Link></button>\n            </div>\n            : <div className=\"header\">\n              <button id=\"btn\"><Link to=\"/login\">Login</Link></button>\n              <button id=\"btn\"><Link to=\"/registration\">Registration</Link></button>\n              {/*<a href=\"/login\" className=\"logo\">Возможности ограничены: Авторизируйтесь</a>*/}\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './login.css';\nconst styles = {\n    position: 'absolute',\n    top: '70px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n}\n\n\nexport default ({\n    changeLoggedIn\n}) => {\n\n    const [UserData, changeUserData] = useState({\n        phoneEmail: '',\n        password: '',\n    })\n\n    const loadData = async () => { //Функция с запросом на сервер\n        // const body = { \"login\": \"user1\", \"password\": \"qwe\", \"email\": \"user1@gmail.com\" }\n\n        axios.defaults.baseURL = 'http://localhost:3000/api';\n        const res = await axios.post(\n            `/login`,\n            UserData\n        )\n\n        // отлов ошибок, можно сделать большую вариацию по коду\n        if (res.status != 200) {\n            return alert(res.data ? res.data : 'Что-то пошло нет так')\n        }\n        // } else if (!res.data.status) {\n        //     return alert(res.data.error ? res.data.error : 'Что-то пошло нет так')\n        // }\n\n        let infoUser = res.data.loginUser;\n        let role = infoUser.searchUser.role;\n        console.log(\"--------\", infoUser.newToken);\n        console.log(res.data)\n\n        if (role === \"admin\") {\n            changeLoggedIn(\"admin\");\n            localStorage.jwtToken = infoUser.newToken;\n            localStorage.role = role;\n            localStorage.id = infoUser.searchUser.phoneEmail;\n        }\n         if (role === \"user\") {\n            changeLoggedIn(\"user\");\n            localStorage.jwtToken = infoUser.newToken;\n            localStorage.role = role;\n            localStorage.id = infoUser.searchUser.phoneEmail;\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div style={styles} className=\"form_auth_block\">\n                    <div className=\"form_auth_block_content\">\n                        <p className=\"form_auth_block_head_text\">Авторизация</p>\n                        <form className=\"form_auth_style\">\n                            <label>Введите Ваш логин</label>\n                            <input type=\"loginl\" name=\"auth_login\" onChange={e => changeUserData({ ...UserData, phoneEmail: e.target.value })} placeholder=\"Введите Ваш логин\" id=\"login\" required ></input>\n                            <label>Введите Ваш пароль</label>\n                            <input type=\"password\" name=\"auth_pass\" onChange={e => changeUserData({ ...UserData, password: e.target.value })} placeholder=\"Введите пароль\" id=\"pass\" required ></input>\n                            <button className=\"form_auth_button\" type=\"button\" name=\"form_auth_submit\" onClick={() => loadData()}><Link to=\"/\">Login</Link></button>\n\n                            <button className=\"form_auth_button\" type=\"button\" ><Link to=\"/password-reset\">Восстановление пароля</Link></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './login.css';\nimport React, { Component }  from 'react';\n\nfunction RegistrationPage() {\n    const styles = {//Стили для страницы\n        position: 'absolute',\n        top: '0px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    }\n\n    const loadData = async () => { //Функция с запросом на сервер\n        let login = document.getElementById('login').value;\n        let password = document.getElementById('pass').value;\n\n        const body = { \"phoneEmail\": login, \"password\": password } // То что передаем на сервер\n        console.log(body);\n        axios.defaults.baseURL = 'http://localhost:3000/api';\n\n        await axios.post(\n            `http://localhost:3000/api/registration`,\n            body\n        );\n        alert('Успешно');\n    }\n\n    return (\n        <div>\n            <div>\n                <div style={styles} class=\"form_auth_block\">\n                    <div class=\"form_auth_block_content\">\n                        <p class=\"form_auth_block_head_text\">Регистрация</p>\n                        <form class=\"form_auth_style\" action=\"#\" method=\"post\">\n                            <label>Введите Ваш логин</label>\n                            <input type=\"login\" name=\"auth_login\" placeholder=\"Введите Ваш логин\" id=\"login\" required ></input>\n                            <label>Введите Ваш пароль</label>\n                            <input type=\"password\" name=\"auth_pass\" placeholder=\"Введите пароль\" id=\"pass\" required ></input>\n                            <button class=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => loadData()}><Link to=\"/login\">Зарегистрироваться</Link></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RegistrationPage;\n\n\n","import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './main.css';\nimport React, { Component }  from 'react';\n\nfunction MainPage() {\n    const styles = {//Стили для страницы\n        position: 'absolute',\n        top: '0px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    }\n\n    const loadData = async () => { //Функция с запросом на сервер\n        let login = document.getElementById('login').value;\n        let password = document.getElementById('pass').value;\n        let passwordConfirmation = document.getElementById('pass').value;\n        let email = document.getElementById('email').value;\n\n        const body = { \"login\": login, \"password\": password, \"passwordConfirmation\":passwordConfirmation, \"email\": email } // То что передаем на сервер\n        console.log(body);\n        axios.defaults.baseURL = 'http://localhost:3000/api';\n\n        await axios.post(\n            `http://localhost:3000/api/auth/register`,\n            body\n        );\n        alert('На почту было отправлено письмо. Подтвердите регистрацию');\n    }\n\n    return (\n\n        <div class=\"block-20 space-between-blocks\">\n        <div class=\"container\">\n          <div class=\"row px-2 pt-4\">\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" I was laughing at the \"easy to copy-paste\" solution to\n                  building landing pages. Awesome, Innovative, and pretty useful\n                  for building quick pages. \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/3AMFDNC.jpg\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Brajeshwar</span>\n                    <a\n                      href=\"https://twitter.com/brajeshwar\"\n                      target=\"_blank\"\n                      class=\"person__info\"\n                      >@Brajeshwar</a\n                    >\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" Frontendor have developed one of the best copy-paste framework\n                  with beautiful neat code! 99% on-time delivery record with all\n                  the blocks on any existing codebase! Saves all the late nights,\n                  build the landing page quickly and the design is always up to\n                  date in the trend! \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/HKAewoz.jpg\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Fajar Siddiq</span>\n                    <a\n                      href=\"https://twitter.com/fajarsiddiqFS\"\n                      target=\"_blank\"\n                      class=\"person__info\"\n                      >@fajarsiddiqFS</a\n                    >\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" These templates are very complete and also nice looking. Even\n                  non-technical people can easily integrate them as whole. One\n                  does not need more to build a complete webpage than these easy\n                  and beautiful blocks. Job well done, indeed. \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/xabGxOb.png\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Aleksandar Balalovski</span>\n                    <a\n                      href=\"https://twitter.com/itsbalal\"\n                      target=\"_blank\"\n                      class=\"person__info\"\n                      >@itsbalal</a\n                    >\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"container\">\n          <div class=\"row px-2 pt-4\">\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" Frontendor has allowed me to save a lot of time when creating\n                  a website for a client. The blocks are dead simple to use if you\n                  know relatively basic HTML, and since they're just HTML/CSS\n                  they're extremely modifiable (saves time instead of building\n                  from scratch). They integrate well into most website designs. \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/0MUuU8l.png\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Satoshi Nakamoto</span>\n                    <a href=\"\" target=\"\" class=\"person__info\">@tuatarian</a>\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" Frontendor have developed one of the best copy-paste framework\n                  with beautiful neat code! 99% on-time delivery record with all\n                  the blocks on any existing codebase! Saves all the late nights,\n                  build the landing page quickly and the design is always up to\n                  date in the trend! \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/HKAewoz.jpg\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Fajar Siddiq</span>\n                    <a\n                      href=\"https://twitter.com/fajarsiddiqFS\"\n                      target=\"_blank\"\n                      class=\"person__info\"\n                      >@fajarsiddiqFS</a\n                    >\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n            <div class=\"col-lg-4\">\n              <div class=\"testimonial-card-1 mb-5\">\n                <p class=\"testimonial-card-1__paragraph mb-3\">\n                  \" Frontendor have developed one of the best copy-paste framework\n                  with beautiful neat code! 99% on-time delivery record with all\n                  the blocks on any existing codebase! Saves all the late nights,\n                  build the landing page quickly and the design is always up to\n                  date in the trend! \"\n                </p>\n                <div class=\"person\">\n                  <div class=\"mb-2\">\n                    <img\n                      class=\"person__avatar\"\n                      src=\"https://i.imgur.com/xabGxOb.png\"\n                    />\n                  </div>\n                  <div class=\"flex-grow-1 d-flex flex-column\">\n                    <span class=\"person__rating\"\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i><i class=\"fas fa-star\"></i\n                      ><i class=\"fas fa-star\"></i></span\n                    ><span class=\"person__name my-1\">Aleksandar Balalovski</span>\n                    <a\n                      href=\"https://twitter.com/itsbalal\"\n                      target=\"_blank\"\n                      class=\"person__info\"\n                      >@itsbalal</a\n                    >\n                  </div>\n                </div>\n                <span class=\"testimonial-card-1__quote-symbol\"\n                  ><i class=\"fas fa-quote-left\"></i\n                ></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default MainPage;\n\n\n","import AppMenu from './menu';\nexport default AppMenu;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './menu.css';\n\nclass AppMenu extends React.Component {\n\n  render() {\n    return (\n\n      <div className=\"sidebar\">\n        {\n          this.props.loggedIn === \"admin\" || this.props.loggedIn === \"user\"\n            ? this.props.loggedIn === \"user\"\n              ? <div className=\"btn-group\">\n                <button className=\"button\"><Link to=\"/\">Главная user</Link></button>\n                    <button className=\"button\"><Link to=\"/\">Главная</Link></button>\n                    <button className=\"button\"><Link to=\"/posts-authorized-user\">Посты</Link></button>\n                    <button className=\"button\"><Link to=\"/new-post\">Добавить пост</Link></button>\n              </div>\n\n              : <div className=\"btn-group\">\n                <button className=\"button\"><Link to=\"/accaunt\">Кабинет admin</Link></button>\n                <button className=\"button\"><Link to=\"/\">Главная</Link></button>\n                <button className=\"button\"><Link to=\"/posts-authorized\">Посты</Link></button>\n                <button className=\"button\"><Link to=\"/new-post\">Добавить пост</Link></button>\n              </div>\n\n            : <div className=\"btn-group\">\n              <button className=\"button\">Гость</button>\n              <button className=\"button\"><Link to=\"/\">Главная</Link></button>\n              <button className=\"button\"><Link to=\"/posts-for-guest\">Посты</Link></button>\n            </div>\n        }\n      </div>\n\n\n    )\n  }\n}\n\nexport default AppMenu;\n","export default __webpack_public_path__ + \"static/media/grapefruit-slice-332-332.bf091365.png\";","import { useState, useEffect } from 'react';\nimport Pagination from 'rc-pagination';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n// import './UsersPaje.css';\n// import '../../components/posts/posts.css'\n// import newPost from '../components/new_post';\nimport React, { Component }  from 'react';\nimport userImg from \"../grapefruit-slice-332-332.png\";\nimport './posts.css'\n\n// import 'rc-pagination/assets/index.css';\n\n\n\nfunction PostsPage(params) {// Страница постов\n    const styles = {//Стили для страницы\n        position: 'absolute',\n        top: '70px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    }\n\n    const [CurrentPage, changeCurrentPage] = useState(1)\n    const [dataFromServer, setDataFromServer] = useState([]); //Используем хук состояния для данных с сервера\n\n    const loadData = async () => { //Функция с запросом на сервер\n        const res = await axios.get(\"http://localhost:3000/api/posts?page=1&sort=standard\")\nif(res) {\n    console.log(res.data.allPosts.posts);\n    setDataFromServer(res.data.allPosts.posts.reverse())\n\n}\n    }\n\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    return (\n        <div style={styles}>\n\n            {\n                dataFromServer.map((item, index) => index < CurrentPage * 5 && index >= (CurrentPage - 1) * 5\n                    ?\n\n                    // <div id=\"pressed\">\n                    //     <h2 id=\"h2\" key={index}>{item.title}</h2>\n                    //     <h3 id=\"h4\" key={index}>{item.content}</h3>\n                    //     <button className=\"button\"><Link to={'/post-id' + '/' + item.id}>Посмотреть</Link></button>\n                    // </div>\n\n                    <div className=\"rightcolumn\">\n                        <div className=\"card\">\n                            <h2>{item.title}</h2>\n                            <h5>created: {item.createdAt}</h5>\n                            <div className=\"fakeimg\"><img className=\"fakeimg\" src={item.img}></img></div>\n                            <div className=\"card\">\n                                {/*<input ref={newFile} accept={'image/x-png,image/jpeg'}*/}\n                                {/*       onChange={(e) => uploadAvatar(e.target.files[0])} id={'newFile'} type=\"file\"*/}\n                                {/*       className={'invisible-input'}/>*/}\n                                <p>username: {item.phoneEmail}</p>\n                            </div>\n                            <p class=\"lengBody\">{item.body}</p>\n                            <h5>updated: {item.createdAt}</h5>\n                            <button className=\"button\"><Link to={'/post-admin' + '/' + item.id}>Посмотреть</Link></button>\n\n                        </div>\n                    </div>\n                    : null)\n            }\n\n            {\n                dataFromServer.length\n                    ? <div className=\"p-2\">\n                        <Pagination className=\"\" onChange={(current) => changeCurrentPage(current)} defaultCurrent={1} total={Math.ceil(dataFromServer.length / 5) * 10} />\n                    </div>\n                    : <h2>Постов пока нет</h2>\n            }\n\n        </div>\n    );\n}\n\nexport default PostsPage;\n","import { useState, useEffect } from 'react';\nimport Pagination from 'rc-pagination';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n// import './UsersPaje.css';\n// import '../../components/posts/posts.css'\n// import newPost from '../components/new_post';\nimport React, { Component }  from 'react';\nimport userImg from \"../grapefruit-slice-332-332.png\";\nimport './posts.css'\n\n// import 'rc-pagination/assets/index.css';\n\n\n\nfunction PostsPage(params) {// Страница постов\n    const styles = {//Стили для страницы\n        position: 'absolute',\n        top: '70px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    }\n\n    const [CurrentPage, changeCurrentPage] = useState(1)\n    const [dataFromServer, setDataFromServer] = useState([]); //Используем хук состояния для данных с сервера\n\n    const loadData = async () => { //Функция с запросом на сервер\n        const res = await axios.get(\"http://localhost:3000/api/posts?page=1&sort=standard\")\n\n        console.log(res.data.allPosts.posts);\n        setDataFromServer(res.data.allPosts.posts.reverse())\n    }\n\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    return (\n        <div style={styles}>\n\n            {\n                dataFromServer.map((item, index) => index < CurrentPage * 5 && index >= (CurrentPage - 1) * 5\n                    ?\n\n                    // <div id=\"pressed\">\n                    //     <h2 id=\"h2\" key={index}>{item.title}</h2>\n                    //     <h3 id=\"h4\" key={index}>{item.content}</h3>\n                    //     <button className=\"button\"><Link to={'/post-id' + '/' + item.id}>Посмотреть</Link></button>\n                    // </div>\n\n                    <div className=\"rightcolumn\">\n                        <div className=\"card\">\n                            <h2>{item.title}</h2>\n                            <h5>created: {item.createdAt}</h5>\n                            <div className=\"fakeimg\"><img className=\"fakeimg\" src={item.img}></img></div>\n                            <div className=\"card\">\n                                {/*<input ref={newFile} accept={'image/x-png,image/jpeg'}*/}\n                                {/*       onChange={(e) => uploadAvatar(e.target.files[0])} id={'newFile'} type=\"file\"*/}\n                                {/*       className={'invisible-input'}/>*/}\n                                <p>username: {item.phoneEmail}</p>\n                            </div>\n                            <p class=\"lengBody\">{item.body}</p>\n                            <h5>updated: {item.createdAt}</h5>\n                            <button className=\"button\"><Link to={'/post-admin' + '/' + item.id}>Посмотреть</Link></button>\n\n                        </div>\n                    </div>\n                    : null)\n            }\n\n            {\n                dataFromServer.length\n                    ? <div className=\"p-2\">\n                        <Pagination className=\"\" onChange={(current) => changeCurrentPage(current)} defaultCurrent={1} total={Math.ceil(dataFromServer.length / 5) * 10} />\n                    </div>\n                    : <h2>Постов пока нет</h2>\n            }\n\n        </div>\n    );\n}\n\nexport default PostsPage;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../components/new_post/new_post.css';\nimport React, { Component }  from 'react';\n\nfunction NewPostsPage(params) {// Страница постов\n    const styles = {//Стили для страницы\n        position: 'absolute',\n        top: '-10px',\n        left: '50%',\n        transform: 'translateX(-50%)'\n    }\n\n\n\n    const [dataFromServer, SetDataFromServer] = useState(null);\n\n    const loadData = async () => {\n\n        let title = document.getElementById('titleBody').value;\n        let content = document.getElementById('contentBody').value;\n\n        console.log(localStorage.id);\n\n        const body = { \"title\": title, \"body\": content, \"phoneEmail\": localStorage.id }\n        console.log(body);\n        const res = await axios.post(`http://localhost:3000/api/new-post`, body, {\n                headers: {\n                    Authorization: localStorage.jwtToken\n                }\n        })\n    if(res) {\n        // console.log(res.data.createNewPost.bodyCreateNewPost[0].id)\n        localStorage.idPost = res.data.createNewPost.bodyCreateNewPost[0].id;\n    }\n    }\n\n    return (\n        <div>\n            <div>\n                <div style={styles} class=\"form_auth_block\">\n                    <div class=\"form_auth_block_content\">\n                        <p class=\"form_auth_block_head_text\">Новая запись</p>\n                        <form class=\"form_auth_style\" action=\"#\" method=\"post\">\n                            <label>Название</label>\n                            <textarea rows=\"1\" cols=\"52\" name=\"textArea\" id=\"titleBody\" required></textarea>\n                            <label>Опишите проблему</label>\n                            <textarea rows=\"15\" cols=\"52\" name=\"textArea\" id=\"contentBody\" required></textarea>\n                            {/*<label>Введите категорию</label>*/}\n                            {/*<textarea rows=\"1\" cols=\"52\" name=\"textArea\" id=\"categoriesBody\" required></textarea>*/}\n                            <button class=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => loadData()}><Link to=\"/posts-authorized\">Добавить запись</Link></button>\n                            {/*<button className=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\"*/}\n                            {/*        onClick={() => loadData()}>Добавить запись</button>*/}\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewPostsPage;\n","import { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './MyPostsReadactPage.css';\n// import newPost from '../components/new_post';\nimport React, { Component }  from 'react';\nimport userImg from '../grapefruit-slice-332-332.png'\n\nconst styles = {\n    marginLeft: '180px'\n}\n\nexport default ({ }) => {\n    const [dataFromServer, setDataFromServer] = useState({\n        avatar: '',\n        email: '',\n        login: ''\n    });\n    const newFile = useRef()\n\n    const loadData = async () => {\n        const res = await axios.get(\"http://localhost:3000/api/posts/\" + localStorage.idPost.toString())\n        if (res) {\n            console.log(res.data.postIdInformation.post);\n            setDataFromServer(res.data.postIdInformation.post[0])\n        }\n    }\n\n    const uploadAvatar = async (image) => {\n\n        let formData = new FormData();\n        formData.append(\"image\", image);\n\n        let res = await axios.post('http://localhost:3000/api/uploud-image/1', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': localStorage.jwtToken\n            }\n        }).catch(err =>{\n            alert(`Что-то пошло нет так. ${err.message}`)\n        })\n\n        if (res.status == 200)\n            loadData()\n        else\n            alert(`Что-то пошло нет так.`)\n    }\n\n    useEffect(() => {\n\n        loadData()\n\n    }, [])\n\n    return (\n                    <div >\n                        <div className=\"rightcolumn\">\n                            <div className=\"card\">\n                                <h2>{dataFromServer.title}</h2>\n                                <h5>created: {dataFromServer.createdAt}</h5>\n                                <div className=\"fakeimg\" ><img className=\"fakeimg\" src={userImg}></img></div>\n                                <div className=\"card\">\n                                    <input ref={newFile} accept={'image/x-png,image/jpeg'} onChange={(e) => uploadAvatar(e.target.files[0])} id={'newFile'} type=\"file\" className={'invisible-input'} />\n                                    <p>username: {dataFromServer.phoneEmail}</p>\n                                </div>\n                                <p>{dataFromServer.body}</p>\n                                <h5>updated: {dataFromServer.createdAt}</h5>\n\n                            </div>\n                        </div>\n        </div>\n    );\n\n};\n","import { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './posts.css';\n// import newPost from '../components/new_post';\nimport React, { Component }  from 'react';\nimport userImg from '../grapefruit-slice-332-332.png'\n\nconst styles = {\n    marginLeft: '180px'\n}\n\nfunction PostsIdPage(params) {\n    const newFile = useRef()\n\n\n    const [dataFromServer, setDataFromServer] = useState({\n        avatar: '',\n        email: '',\n        login: ''\n    });\n\n    const loadData = async () => {\n        let params = await window.location.href;\n        params = await params.match(/post-admin\\/([^ ]*)/)[1];\n        await (params)\n        localStorage.idPost = params.toString()\n        const res = await axios.get(\"http://localhost:3000/api/posts/\" + params.toString())\n        console.log(res.data.postIdInformation.post[0]);\n        setDataFromServer(res.data.postIdInformation.post[0])\n    }\n\n    const deletePost = async () => {\n        // let params = await window.location.href;\n        // params = await params.match(/post-admin\\/([^ ]*)/)[1];\n        await axios.delete(\n            `/delete-post/` + localStorage.idPost.toString(),\n            {\n                headers: {\n                    Authorization: localStorage.jwtToken\n                }\n            }\n        );\n    }\n\n    const uploadAvatar = async (image) => {\n\n        let formData = new FormData();\n        formData.append(\"image\", image);\n\n        let res = await axios.post('http://localhost:3000/api/uploud-image/1', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': localStorage.jwtToken\n            }\n        }).catch(err =>{\n            alert(`Что-то пошло нет так. ${err.message}`)\n        })\n\n        if (res.status == 200)\n            loadData()\n        else\n            alert(`Что-то пошло нет так.`)\n    }\n\n    async function createDisLikePost() {\n        let params = await window.location.href;\n        params = await params.match(/post-admin\\/([^ ]*)/)[1];\n       // await (params)\n      const body = {\n          \"typeActionPostComment\": \"post\",\n          \"idPostComment\": params.toString(),\n          \"phoneEmail\": localStorage.id.toString(),\n          \"likeDislike\": \"dislike\"\n    }\n        if(localStorage.jwtToken) {\n            const res = await axios.post(\n                `http://localhost:3000/api/new-like`,\n                body,\n                {\n                    headers: {\n                        Authorization: localStorage.jwtToken\n                    }\n                }\n            );\n            localStorage.jwtToken = res.data.resultCreateNewLike.newToken;\n            loadData();\n        }\n        return null;\n    }\n\n    async function createLikePost() {\n        let params = await window.location.href;\n        params = await params.match(/post-admin\\/([^ ]*)/)[1];\n        // await (params)\n        const body = {\n            \"typeActionPostComment\": \"post\",\n            \"idPostComment\": params.toString(),\n            \"phoneEmail\": localStorage.id.toString(),\n            \"likeDislike\": \"like\"\n        }\n        if(localStorage.jwtToken) {\n            const res = await axios.post(\n                `http://localhost:3000/api/new-like`,\n                body,\n                {\n                    headers: {\n                        Authorization: localStorage.jwtToken\n                    }\n                }\n            );\n            localStorage.jwtToken = res.data.resultCreateNewLike.newToken;\n            loadData();\n        }\n        return null;\n    }\n\n\n\n    useEffect(() => {\n\n        loadData()\n\n    }, [])\n\n    return (\n\n\n        <div >\n\n            <div className=\"rightcolumn\">\n                <div className=\"card\">\n                    <h2>{dataFromServer.title}</h2>\n                    <h5>created: {dataFromServer.createdAt}</h5>\n                    <div className=\"fakeimg\" ><img className=\"fakeimg\" src={userImg}></img></div>\n\n                    <div className=\"card\">\n                        <input ref={newFile} accept={'image/x-png,image/jpeg'} onChange={(e) => uploadAvatar(e.target.files[0])} id={'newFile'} type=\"file\" className={'invisible-input'} />\n                        <p>username: {dataFromServer.phoneEmail}</p>\n                    </div>\n\n                    <p>{dataFromServer.body}</p>\n                    <h5>updated: {dataFromServer.createdAt}</h5>\n\n                    <button className=\"social-like\" onClick={createDisLikePost}>\n                        <span className=\"like\"><i className=\"glyphicon glyphicon-thumbs-up\"></i></span>\n                        <span className=\"count\">{dataFromServer.countDisLikes}</span>\n                    </button>\n                    &nbsp;\n\n                    <button className=\"social-dislike\" onClick={createLikePost}>\n                        <span className=\"dislike\">{dataFromServer.countLikes}</span>\n                        <span className=\"like\"><i className=\"glyphicon glyphicon-thumbs-down\"></i></span>\n                    </button>\n\n<div>\n    <br/>\n\n    <button className=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => deletePost()}><Link\n        to=\"/post-admin\">Удалить запись</Link></button>\n    {/*<button className=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => deletePost()}>Удалить запись</button>*/}\n\n</div>\n\n                </div>\n\n            </div>\n\n            {/*<div class=\"box1\">*/}\n            {/*    <div className=\"info-item\">*/}\n            {/*<div>*/}\n            {/*    <img src={userImg}></img>*/}\n            {/*</div>*/}\n            {/*<div>*/}\n            {/*    <input ref={newFile} accept={'image/x-png,image/jpeg'} onChange={(e) => uploadAvatar(e.target.files[0])} id={'newFile'} type=\"file\" className={'invisible-input'} />*/}\n            {/*</div>*/}\n            {/*<label>id post</label>*/}\n            {/*<h1>{dataFromServer.id}</h1>*/}\n            {/*<label>username</label>*/}\n            {/*<h1>{dataFromServer.phoneEmail}</h1>*/}\n            {/*<label>title</label>*/}\n            {/*<h1>{dataFromServer.title}</h1>*/}\n            {/*<label>body</label>*/}\n            {/*<h1>{dataFromServer.title}</h1>*/}\n            {/*<label>image</label>*/}\n            {/*<h1>{dataFromServer.image}</h1>*/}\n            {/*<label>createdAt</label>*/}\n            {/*<h1>{dataFromServer.createdAt}</h1>*/}\n            {/*<label>updatedAt</label>*/}\n            {/*<h1>{dataFromServer.updatedAt}</h1>*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n\n        </div>\n    );\n\n};\n\nexport default PostsIdPage;\n","import './styles.css';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport NotFound404 from './components/404/404';\nimport AppHeader from './components/app-header'\nimport LoginPage from './pages/LoginPage'\nimport RegistrationPage from './pages/RegistrationPage';\nimport MainPage from './pages/MainPage';\nimport AppMenu from './components/menu'\nimport AllPosts from './pages/allPosts';\nimport AllPostsUser from './pages/AllPostsUser';\nimport NewPostsPage from './pages/NewPostPage'\nimport MyPostsRedactPage from './pages/MyPostsRedactPage'\nimport PostIdPage from \"./pages/PostIdPage\";\nimport {useState} from \"react\";\nimport React, { Component }  from 'react';\n\nconst App = () => {\n  const [loggedIn, setloggedIn] = useState()\n  const changeLoggedIn = (state) => setloggedIn(state)\n\n  return (\n    <Router>\n      <AppMenu loggedIn={loggedIn} changeLoggedIn={changeLoggedIn} />\n\n         <div className=\"App\">\n        <AppHeader loggedIn={loggedIn} changeLoggedIn={changeLoggedIn} />\n\n        <Switch>\n          {/*all users*/}\n          <Route exact path=\"/login\" render={() => <LoginPage changeLoggedIn={changeLoggedIn} />} />\n          <Route exact path=\"/registration\" render={() => <RegistrationPage  changeLoggedIn={changeLoggedIn} />} />\n          <Route exact path=\"/\" render={() => <MainPage />} />\n\n          {/*admin and user*/}\n          <Route exact path=\"/new-post\" render={() => <NewPostsPage changeLoggedIn={changeLoggedIn} />} />\n          <Route exact path=\"/my-posts\" render={() => <MyPostsRedactPage />} />\n          <Route exact path=\"/posts-authorized\" component={AllPosts} />\n\n          {/*admin*/}\n          <Route exact path=\"/post-admin/:id\" render={() => <PostIdPage changeLoggedIn={changeLoggedIn} />} />\n\n          {/*user*/}\n            <Route exact path=\"/posts-authorized-user\" component={AllPostsUser} />\n\n          <Route component={NotFound404} />\n\n        </Switch>\n        {/*<Footer />*/}\n      </div>\n\n    </Router>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}